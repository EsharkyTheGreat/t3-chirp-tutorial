import { type NextPage } from "next";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api"
import Head from "next/head";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex gap-3 w-full">
      <Image className="w-14 h-14 rounded-full" src={user.profileImageUrl} alt="Profile Image" width={56} height={56} />
      <input placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
    </div>
  )
}


type PostWithUser = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="border-b border-slate-400 flex p-4 gap-3">
      <Image src={author.profilePicture} className="w-14 h-14 rounded-full" alt={`@${author.name}'s profile picture`} width={56} height={56} />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.name}`}</span>
          <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;

  const user = useUser();
  return (
    <>
      <Head>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='flex justify-center h-screen'>
        <div className='w-full md:max-w-2xl border-x border-slate-400 h-full' >
          <div className="flex border-b border-slate-400 p-4 ">
            {!user.isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {/* {user.isSignedIn && <div className="flex justify-center"><SignOutButton /></div>} */}
            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data.map((fullPost) => <PostView {...fullPost} />)}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
